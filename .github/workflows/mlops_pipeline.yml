name: MLOps Pipeline

on:
  workflow_dispatch:
    inputs:
      run_option:
        description: 'Chọn chế độ: all (chạy toàn bộ pipeline)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - dataset
          - train
          - eval

jobs:
  dataset_preparation:
    if: ${{ github.event.inputs.run_option == 'all' || github.event.inputs.run_option == 'dataset' }}
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EMR_KEY }}" > emr.pem
        chmod 600 emr.pem
        ls
        
    - name: SSH to EC2 instance and run commands
      run: |
        ssh -i "emr.pem" -o StrictHostKeyChecking=no ubuntu@${{ vars.HOST }} << 'EOF'
          echo "Connected successfully!"
          ls
          whoami
          cd /home/ubuntu/kltn-sentiment-monitoring-mlops || exit
          python3 main.py dataset
        EOF
      env:
        PRIVATE_KEY: ${{ secrets.EMR_KEY }}
        
  training_count_vectorizer:
    if: ${{ github.event.inputs.run_option == 'all'  }}
    needs: dataset_preparation
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EMR_KEY }}" > emr.pem
        chmod 600 emr.pem
    - name: SSH to EC2 and run training
      run: |
        ssh -i "emr.pem" -o StrictHostKeyChecking=no ubuntu@${{ vars.HOST }} << 'EOF'
          cd /home/ubuntu/kltn-sentiment-monitoring-mlops || exit
          python3 main.py train_count_vector
        EOF
        
  training_hashing_tf:
    if: ${{ github.event.inputs.run_option == 'all'  }}
    needs: dataset_preparation
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EMR_KEY }}" > emr.pem
        chmod 600 emr.pem
    - name: SSH to EC2 and run training
      run: |
        ssh -i "emr.pem" -o StrictHostKeyChecking=no ubuntu@${{ vars.HOST }} << 'EOF'
          cd /home/ubuntu/kltn-sentiment-monitoring-mlops || exit
          python3 main.py train_hashing_tf
        EOF

  evaluate_count_vectorizer:
    if: ${{ github.event.inputs.run_option == 'all' }}
    needs: [training_count_vectorizer]
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EMR_KEY }}" > emr.pem
        chmod 600 emr.pem
    - name: SSH to EC2 and run training
      run: |
        ssh -i "emr.pem" -o StrictHostKeyChecking=no ubuntu@${{ vars.HOST }} << 'EOF'
          cd /home/ubuntu/kltn-sentiment-monitoring-mlops || exit
          python3 main.py eval_count_vector
        EOF

  evaluate_hashing_tf:
    if: ${{ github.event.inputs.run_option == 'all' }}
    needs: [training_hashing_tf]
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EMR_KEY }}" > emr.pem
        chmod 600 emr.pem
    - name: SSH to EC2 and run training
      run: |
        ssh -i "emr.pem" -o StrictHostKeyChecking=no ubuntu@${{ vars.HOST }} << 'EOF'
          cd /home/ubuntu/kltn-sentiment-monitoring-mlops || exit
          python3 main.py eval_hashing_tf
        EOF

  training_standalone:
    if: ${{ github.event.inputs.run_option == 'train' }}
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EMR_KEY }}" > emr.pem
        chmod 600 emr.pem
        ls
        
    - name: SSH to EC2 instance and run commands
      run: |
        ssh -i "emr.pem" -o StrictHostKeyChecking=no ubuntu@${{ vars.HOST }} << 'EOF'
          echo "Connected successfully!"
          ls
          whoami
          cd /home/ubuntu/kltn-sentiment-monitoring-mlops || exit
          python3 main.py train
        EOF
      env:
        PRIVATE_KEY: ${{ secrets.EMR_KEY }}
        
  evaluate_standalone:
    if: ${{ github.event.inputs.run_option == 'eval' }}
    runs-on: ubuntu-latest
    steps:
    - name: Set up SSH key
      run: |
        echo "${{ secrets.EMR_KEY }}" > emr.pem
        chmod 600 emr.pem
    - name: SSH to EC2 and run training
      run: |
        ssh -i "emr.pem" -o StrictHostKeyChecking=no ubuntu@${{ vars.HOST }} << 'EOF'
          cd /home/ubuntu/kltn-sentiment-monitoring-mlops || exit
          python3 main.py eval
        EOF

  notify_success:
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs: [evaluate_count_vectorizer, evaluate_hashing_tf]
    steps:
    - name: Send success email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "MLOps Pipeline Success"
        body: "The MLOps pipeline has completed successfully."
        to: ${{ secrets.NOTIFY_EMAIL }}
        from: ${{ secrets.EMAIL_USERNAME }}
        

  notify_failure:
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    needs: [evaluate_count_vectorizer, evaluate_hashing_tf]
    steps:
    - name: Send failure email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "MLOps Pipeline Failure"
        body: "The MLOps pipeline has failed. Please check the logs for details."
        to: ${{ secrets.NOTIFY_EMAIL }}
        from: ${{ secrets.EMAIL_USERNAME }}
        
